name: Spring Boot Gradle CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      # AWS ECR 업로드를 위한 credential 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      # AWS ECR에 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run chmod to make gradlew executable
        # 없으면 build에서 권한문제 발생
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

        # 빌드
      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} # AWS ECR 로그인 시 받은 registry 정보
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: latest
        # 미리 만들어놓은 Dockerfile로 이미지 빌드 후 ECR에 push
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./ 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

